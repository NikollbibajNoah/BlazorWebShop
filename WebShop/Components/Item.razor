@inject ItemsService Service;

<li>
    <div class="item-content">
        <div class="item-img">
           
        </div>

        <div class="item-description">
            <div class="title"><b>@title</b></div>
            <div class="sub"><b>Price: </b>@CurrentItem.Price.ToString("F2") CHF</div>
            <div class="sub"><b>Category: </b>@CurrentItem.Category</div>
            
            <div class="actions">
                <a href="@($"/store/item/{CurrentItem.Id}")">
                    <span class="material-symbols-outlined">
                        info
                    </span>
                </a>

                <button class="btn btn-primary" @onclick="AddItemToCart">
                    <span class="material-symbols-outlined">
                        add_shopping_cart
                    </span>
                </button>
            </div>
        </div>
    </div>
</li>

@code {

    [Parameter]
    public ItemData CurrentItem { get; set; }

    [Parameter]
    public EventCallback<bool> SetClickedEvent { get; set; }
    private bool HasClicked = false;


    private string title = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        title = CurrentItem.Name;

        var l = 25;
        if (title.Length > l)
        {
            title = title.Substring(0, l) +"...";
        }
    }

    public async Task AddItemToCart()
    {
        ///Add To Shopping Cart
        Service.AddItemToCart(CurrentItem);


        HasClicked = true;

        await SetClickedEvent.InvokeAsync(HasClicked);

        HasClicked = false;
    }
}
